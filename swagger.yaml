swagger: '2.0'
info:
  description: 'API documentation for Amazon Pay. There are 4 primary objects that you can use to complete your payments with Amazon Pay: CheckoutSession, ChargePermission, Charge, and Refund. Each represents a distinct payment operation or agreement, and each has different periods of relevance and use'
  version: '1.0'
  title: Amazon Pay API
  license:
    name: Amazon Pay Integration Guide
    url: https://developer.amazon.com/docs/amazon-pay-api-v2/introduction.html
host: pay-api.amazon.com
basePath: /
tags:
  - name: Buyer
    description: The Buyer object includes details about the buyer such as name, email, unique Amazon Pay identifier, default shipping address postal and country code. You should only use this object if youâ€™ve implemented Amazon Sign-in and only because you need to retrieve Buyer details before the buyer starts Amazon Pay checkout.
  - name: Charge
    description: A Charge represents a single payment transaction. Use a Charge to either authorize an amount and capture it later, or authorize and capture payment immediately.
  - name: Charge Permission
    description: A Charge Permission object represents buyer consent to be charged. You can either request a one-time or a recurring Charge Permission object.
  - name: Checkout Session
    description: A Checkout Session represents a single active session (or engagement) for a buyer on your website. The Checkout Session can be used to facilitate a one-time charge, multiple charges, or recovery from a declined payment.
  - name: Delivery Tracker
    description: Amazon Pay uses the Delivery Tracker object to inform the buyer on Alexa when shipments are out for delivery and when they are delivered.
  - name: Refund
    description: A Refund allows you (the merchant) to refund some or all of a previously-captured Charge to the buyer. A refund can only be initiated on a previously-captured Charge, and multiple Refunds can be initiated on a single Charge.
schemes:
  - https
paths:
  /v2/buyers/{buyerToken}:
    get:
      tags:
        - Buyer
      summary: Get Buyer
      operationId: getCheckoutSessionUsingGET
      produces:
        - application/json
        - application/xml
      parameters:
        - name: authorization
          in: header
          description: authorization
          required: true
          type: string
        - name: buyerToken
          in: path
          description: buyerToken
          required: true
          type: string
        - name: x-amz-pay-date
          in: header
          description: x-amz-pay-date
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/BuyerResponse'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized Access
        '403':
          description: Invalid Authorization Token
        '404':
          description: Resource Not Found
        '405':
          description: Request Not Supported
        '408':
          description: Request Timeout
        '409':
          description: Conflict
        '422':
          description: Unprocessable Entity
        '429':
          description: Too Many Requests
        '500':
          description: InternalServer Error
        '503':
          description: Service Unavailable
  /v2/chargePermissions/{chargePermissionId}:
    get:
      tags:
        - Charge Permission
      summary: Get Charge Permission
      operationId: getChargePermissionUsingGET
      produces:
        - application/json
        - application/xml
      parameters:
        - name: authorization
          in: header
          description: authorization
          required: true
          type: string
        - name: chargePermissionId
          in: path
          description: chargePermissionId
          required: true
          type: string
        - name: x-amz-pay-date
          in: header
          description: x-amz-pay-date
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ChargePermissionResponse'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized Access
        '403':
          description: Invalid Authorization Token
        '404':
          description: Resource Not Found
        '405':
          description: Request Not Supported
        '408':
          description: Request Timeout
        '409':
          description: Conflict
        '422':
          description: Unprocessable Entity
        '429':
          description: Too Many Requests
        '500':
          description: InternalServer Error
        '503':
          description: Service Unavailable
    patch:
      tags:
        - Charge Permission
      summary: Update Charge Permission
      operationId: updateChargePermissionUsingPATCH
      consumes:
        - application/xml
        - application/json
      produces:
        - application/json
        - application/xml
      parameters:
        - name: authorization
          in: header
          description: authorization
          required: true
          type: string
        - name: chargePermissionId
          in: path
          description: chargePermissionId
          required: true
          type: string
        - in: body
          name: updateChargePermissionRequest
          description: updateChargePermissionRequest
          required: true
          schema:
            $ref: '#/definitions/UpdateChargePermissionRequest'
        - name: x-amz-pay-date
          in: header
          description: x-amz-pay-date
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ChargePermissionResponse'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '422':
          description: Unprocessable Entity
  /v2/chargePermissions/{chargePermissionId}/complete:
    delete:
      tags:
        - Charge Permission
      summary: Close Charge Permission
      operationId: closeChargePermissionUsingDELETE
      produces:
        - application/json
        - application/xml
      parameters:
        - name: authorization
          in: header
          description: authorization
          required: true
          type: string
        - name: chargePermissionId
          in: path
          description: chargePermissionId
          required: true
          type: string
        - in: body
          name: closeChargePermissionRequest
          description: closeChargePermissionRequest
          required: true
          schema:
            $ref: '#/definitions/CloseChargePermissionRequest'
        - name: x-amz-pay-date
          in: header
          description: x-amz-pay-date
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ChargePermissionResponse'
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Resource Not Found
        '409':
          description: Conflict
        '422':
          description: Unprocessable Entity
        '500':
          description: InternalServer Error
  /v2/charges/:
    post:
      tags:
        - Charge
      summary: Create Charge
      operationId: createChargeUsingPOST
      consumes:
        - application/xml
        - application/json
      produces:
        - application/json
        - application/xml
      parameters:
        - name: authorization
          in: header
          description: authorization
          required: true
          type: string
        - in: body
          name: createChargeRequest
          description: createChargeRequest
          required: true
          schema:
            $ref: '#/definitions/CreateChargeRequest'
        - name: x-amz-pay-date
          in: header
          description: x-amz-pay-date
          required: true
          type: string
        - name: x-amz-pay-idempotency-key
          in: header
          description: x-amz-pay-idempotency-key
          required: true
          type: string
      responses:
        '200':
          description: Ok
          schema:
            $ref: '#/definitions/ChargeResponse'
        '201':
          description: Success
          schema:
            $ref: '#/definitions/ChargeResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Resource Not Found
        '422':
          description: Unprocessable Entity
        '500':
          description: InternalServer Error
  /v2/charges/{chargeId}:
    get:
      tags:
        - Charge
      summary: Get Charge
      operationId: getChargeUsingGET
      produces:
        - application/json
        - application/xml
      parameters:
        - name: authorization
          in: header
          description: authorization
          required: true
          type: string
        - name: chargeId
          in: path
          description: chargeId
          required: true
          type: string
        - name: x-amz-pay-date
          in: header
          description: x-amz-pay-date
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ChargeResponse'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized Access
        '403':
          description: Invalid Authorization Token
        '404':
          description: Resource Not Found
        '405':
          description: Request Not Supported
        '408':
          description: Request Timeout
        '422':
          description: Unprocessable Entity
        '429':
          description: Too Many Requests
        '500':
          description: InternalServer Error
        '503':
          description: Service Unavailable
  /v2/charges/{chargeId}/cancel:
    delete:
      tags:
        - Charge
      summary: Cancel Charge
      operationId: cancelChargeUsingDELETE
      produces:
        - application/json
        - application/xml
      parameters:
        - name: authorization
          in: header
          description: authorization
          required: true
          type: string
        - in: body
          name: cancelChargeRequest
          description: cancelChargeRequest
          required: true
          schema:
            $ref: '#/definitions/CancelChargeRequest'
        - name: chargeId
          in: path
          description: chargeId
          required: true
          type: string
        - name: x-amz-pay-date
          in: header
          description: x-amz-pay-date
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ChargeResponse'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Resource Not Found
        '422':
          description: Unprocessable Entity
        '500':
          description: InternalServer Error
  /v2/charges/{chargeId}/capture:
    post:
      tags:
        - Charge
      summary: Capture Charge
      operationId: captureChargeUsingPOST
      consumes:
        - application/json
      produces:
        - application/json
        - application/xml
      parameters:
        - name: authorization
          in: header
          description: authorization
          required: true
          type: string
        - in: body
          name: captureChargeRequest
          description: captureChargeRequest
          required: true
          schema:
            $ref: '#/definitions/CaptureChargeRequest'
        - name: chargeId
          in: path
          description: chargeId
          required: true
          type: string
        - name: x-amz-pay-date
          in: header
          description: x-amz-pay-date
          required: true
          type: string
        - name: x-amz-pay-idempotency-key
          in: header
          description: x-amz-pay-idempotency-key
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ChargeResponse'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Resource Not Found
        '422':
          description: Unprocessable Entity
        '500':
          description: InternalServer Error
  /v2/checkoutSessions/:
    post:
      tags:
        - Checkout Session
      summary: Create Checkout Session
      operationId: createCheckoutSessionUsingPOST
      consumes:
        - application/xml
        - application/json
      produces:
        - application/json
        - application/xml
      parameters:
        - name: authorization
          in: header
          description: authorization
          required: true
          type: string
        - in: body
          name: createCheckoutSessionRequest
          description: createCheckoutSessionRequest
          required: true
          schema:
            $ref: '#/definitions/CreateCheckoutSessionRequest'
        - name: x-amz-pay-date
          in: header
          description: x-amz-pay-date
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CheckoutSessionResponse'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Resource Not Found
        '422':
          description: Unprocessable Entity
  /v2/checkoutSessions/{checkoutSessionId}:
    get:
      tags:
        - Checkout Session
      summary: Get Checkout Session
      operationId: getCheckoutSessionUsingGET_1
      produces:
        - application/json
        - application/xml
      parameters:
        - name: authorization
          in: header
          description: authorization
          required: true
          type: string
        - name: checkoutSessionId
          in: path
          description: checkoutSessionId
          required: true
          type: string
        - name: x-amz-pay-date
          in: header
          description: x-amz-pay-date
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CheckoutSessionResponse'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized Access
        '403':
          description: Invalid Authorization Token
        '404':
          description: Resource Not Found
        '405':
          description: Request Not Supported
        '408':
          description: Request Timeout
        '409':
          description: Conflict
        '422':
          description: Unprocessable Entity
        '429':
          description: Too Many Requests
        '500':
          description: InternalServer Error
        '503':
          description: Service Unavailable
    patch:
      tags:
        - Checkout Session
      summary: Update Checkout Session
      operationId: updateCheckoutSessionUsingPATCH
      consumes:
        - application/xml
        - application/json
      produces:
        - application/json
        - application/xml
      parameters:
        - name: authorization
          in: header
          description: authorization
          required: true
          type: string
        - name: checkoutSessionId
          in: path
          description: checkoutSessionId
          required: true
          type: string
        - in: body
          name: updateCheckoutSessionRequest
          description: updateCheckoutSessionRequest
          required: true
          schema:
            $ref: '#/definitions/UpdateCheckoutSessionRequest'
        - name: x-amz-pay-date
          in: header
          description: x-amz-pay-date
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CheckoutSessionResponse'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Resource Not Found
        '422':
          description: Unprocessable Entity
  /v2/checkoutSessions/{checkoutSessionId}/complete:
    post:
      tags:
        - Checkout Session
      summary: Complete Checkout Session
      operationId: completeCheckoutSessionUsingPOST
      consumes:
        - application/xml
        - application/json
      produces:
        - application/json
        - application/xml
      parameters:
        - name: authorization
          in: header
          description: authorization
          required: true
          type: string
        - name: checkoutSessionId
          in: path
          description: checkoutSessionId
          required: true
          type: string
        - in: body
          name: completeCheckoutSessionRequest
          description: completeCheckoutSessionRequest
          required: true
          schema:
            $ref: '#/definitions/CompleteCheckoutSessionRequest'
        - name: x-amz-pay-date
          in: header
          description: x-amz-pay-date
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CheckoutSessionResponse'
        '201':
          description: Created
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Resource Not Found
        '409':
          description: Conflict
        '422':
          description: Unprocessable Entity
        '500':
          description: InternalServer Error
  /v2/deliveryTrackers/:
    post:
      tags:
        - Delivery Tracker
      summary: Create Delivery Tracker
      operationId: createDeliveryTrackerUsingPOST
      consumes:
        - application/xml
        - application/json
      produces:
        - application/json
        - application/xml
      parameters:
        - name: authorization
          in: header
          description: authorization
          required: true
          type: string
        - in: body
          name: createDeliveryTrackerRequest
          description: createDeliveryTrackerRequest
          required: true
          schema:
            $ref: '#/definitions/CreateDeliveryTrackerRequest'
        - name: x-amz-pay-date
          in: header
          description: x-amz-pay-date
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeliveryTrackerResponse'
        '201':
          description: Created
        '400':
          description: Bad Request
        '401':
          description: Unauthorized Access
        '403':
          description: Invalid Authorization Token
        '404':
          description: Resource Not Found
        '405':
          description: Request Not Supported
        '408':
          description: Request Timeout
        '422':
          description: Unprocessable Entity
        '429':
          description: Too Many Requests
        '500':
          description: InternalServer Error
        '503':
          description: Service Unavailable
  /v2/refunds/:
    post:
      tags:
        - Refund
      summary: Create Refund
      operationId: createRefundUsingPOST
      consumes:
        - application/xml
        - application/json
      produces:
        - application/json
        - application/xml
      parameters:
        - name: authorization
          in: header
          description: authorization
          required: true
          type: string
        - in: body
          name: createRefundRequest
          description: createRefundRequest
          required: true
          schema:
            $ref: '#/definitions/CreateRefundRequest'
        - name: x-amz-pay-date
          in: header
          description: x-amz-pay-date
          required: true
          type: string
        - name: x-amz-pay-idempotency-key
          in: header
          description: x-amz-pay-idempotency-key
          required: true
          type: string
      responses:
        '200':
          description: Ok
          schema:
            $ref: '#/definitions/RefundResponse'
        '201':
          description: Success
          schema:
            $ref: '#/definitions/RefundResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Resource Not Found
        '422':
          description: Unprocessable Entity
        '500':
          description: InternalServer Error
  /v2/refunds/{refundId}:
    get:
      tags:
        - Refund
      summary: Get Refund
      operationId: getRefundUsingGET
      produces:
        - application/json
        - application/xml
      parameters:
        - name: authorization
          in: header
          description: authorization
          required: true
          type: string
        - name: refundId
          in: path
          description: refundId
          required: true
          type: string
        - name: x-amz-pay-date
          in: header
          description: x-amz-pay-date
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RefundResponse'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized Access
        '403':
          description: Invalid Authorization Token
        '404':
          description: Resource Not Found
        '405':
          description: Request Not Supported
        '408':
          description: Request Timeout
        '422':
          description: Unprocessable Entity
        '429':
          description: Too Many Requests
        '500':
          description: InternalServer Error
        '503':
          description: Service Unavailable
definitions:
  Address:
    type: object
    properties:
      addressLine1:
        type: string
      addressLine2:
        type: string
      addressLine3:
        type: string
      city:
        type: string
      countryCode:
        type: string
      county:
        type: string
      district:
        type: string
      name:
        type: string
      phoneNumber:
        type: string
      postalCode:
        type: string
      stateOrRegion:
        type: string
    title: Address
  AddressRestrictions:
    type: object
    properties:
      restrictions:
        type: object
        additionalProperties:
          $ref: '#/definitions/Restriction'
      type:
        type: string
    title: AddressRestrictions
  Amount:
    type: object
    properties:
      amount:
        type: string
      currencyCode:
        type: string
    title: Amount
  Buyer:
    type: object
    properties:
      buyerId:
        type: string
      email:
        type: string
      name:
        type: string
      phoneNumber:
        type: string
      primeMembershipTypes:
        type: array
        items:
          type: object
    title: Buyer
  BuyerResponse:
    type: object
    properties:
      billingAddress:
        $ref: '#/definitions/Address'
      buyerId:
        type: string
      countryCode:
        type: string
      email:
        type: string
      name:
        type: string
      phoneNumber:
        type: string
      postalCode:
        type: string
      primeMembershipTypes:
        type: array
        items:
          type: string
      shippingAddress:
        $ref: '#/definitions/Address'
    title: BuyerResponse
  CancelChargeRequest:
    type: object
    properties:
      cancellationReason:
        type: string
    title: CancelChargeRequest
  CaptureChargeRequest:
    type: object
    properties:
      captureAmount:
        $ref: '#/definitions/Amount'
      softDescriptor:
        type: string
    title: CaptureChargeRequest
  ChargePermissionResponse:
    type: object
    properties:
      billingAddress:
        $ref: '#/definitions/Address'
      buyer:
        $ref: '#/definitions/Buyer'
      chargePermissionId:
        type: string
      chargePermissionReferenceId:
        type: string
      chargePermissionType:
        type: string
      creationTimestamp:
        type: string
      expirationTimestamp:
        type: string
      limits:
        $ref: '#/definitions/Limits'
      merchantMetadata:
        $ref: '#/definitions/MerchantMetadata'
      paymentPreferences:
        type: array
        items:
          $ref: '#/definitions/PaymentPreference'
      platformId:
        type: string
      presentmentCurrency:
        type: string
      recurringMetadata:
        $ref: '#/definitions/RecurringMetadata'
      releaseEnvironment:
        type: string
      shippingAddress:
        $ref: '#/definitions/Address'
      statusDetails:
        $ref: '#/definitions/StatusDetails'
    title: ChargePermissionResponse
  ChargeResponse:
    type: object
    properties:
      captureAmount:
        $ref: '#/definitions/Amount'
      chargeAmount:
        $ref: '#/definitions/Amount'
      chargeId:
        type: string
      chargePermissionId:
        type: string
      conversionRate:
        type: number
        format: double
      convertedAmount:
        $ref: '#/definitions/Amount'
      creationTimestamp:
        type: string
      expirationTimestamp:
        type: string
      merchantMetadata:
        $ref: '#/definitions/MerchantMetadata'
      providerMetadata:
        $ref: '#/definitions/ProviderMetadata'
      refundedAmount:
        $ref: '#/definitions/Amount'
      releaseEnvironment:
        type: string
      softDescriptor:
        type: string
      statusDetails:
        $ref: '#/definitions/StatusDetails'
    title: ChargeResponse
  CheckoutSessionResponse:
    type: object
    properties:
      billingAddress:
        $ref: '#/definitions/Address'
      buyer:
        $ref: '#/definitions/Buyer'
      chargeId:
        type: string
      chargePermissionId:
        type: string
      chargePermissionType:
        type: string
      checkoutSessionId:
        type: string
      constraints:
        type: array
        items:
          $ref: '#/definitions/Constraint'
      creationTimestamp:
        type: string
      deliverySpecifications:
        $ref: '#/definitions/DeliverySpecifications'
      expirationTimestamp:
        type: string
      merchantMetadata:
        $ref: '#/definitions/MerchantMetadata'
      paymentDetails:
        $ref: '#/definitions/PaymentDetails'
      paymentPreferences:
        type: array
        items:
          $ref: '#/definitions/PaymentPreference'
      platformId:
        type: string
      productType:
        type: string
      providerMetadata:
        $ref: '#/definitions/ProviderMetadata'
      recurringMetadata:
        $ref: '#/definitions/RecurringMetadata'
      releaseEnvironment:
        type: string
      shippingAddress:
        $ref: '#/definitions/Address'
      statusDetails:
        $ref: '#/definitions/StatusDetails'
      storeId:
        type: string
      supplementaryData:
        type: string
      webCheckoutDetails:
        $ref: '#/definitions/WebCheckoutDetails'
    title: CheckoutSessionResponse
  CloseChargePermissionRequest:
    type: object
    properties:
      cancelPendingCharges:
        type: boolean
      closureReason:
        type: string
    title: CloseChargePermissionRequest
  CompleteCheckoutSessionRequest:
    type: object
    properties:
      chargeAmount:
        $ref: '#/definitions/Amount'
    title: CompleteCheckoutSessionRequest
  Constraint:
    type: object
    properties:
      constraintId:
        type: string
      description:
        type: string
    title: Constraint
  CreateChargeRequest:
    type: object
    properties:
      canHandlePendingAuthorization:
        type: boolean
      captureNow:
        type: boolean
      chargeAmount:
        $ref: '#/definitions/Amount'
      chargePermissionId:
        type: string
      merchantMetadata:
        $ref: '#/definitions/MerchantMetadata'
      providerMetadata:
        $ref: '#/definitions/ProviderMetadata'
      softDescriptor:
        type: string
    title: CreateChargeRequest
  CreateCheckoutSessionRequest:
    type: object
    properties:
      deliverySpecifications:
        $ref: '#/definitions/DeliverySpecifications'
      scopes:
        type: array
        items:
          type: string
      storeId:
        type: string
      webCheckoutDetails:
        $ref: '#/definitions/WebCheckoutDetails'
    title: CreateCheckoutSessionRequest
  CreateDeliveryTrackerRequest:
    type: object
    properties:
      amazonOrderReferenceId:
        type: string
      deliveryDetails:
        type: array
        items:
          $ref: '#/definitions/DeliveryDetail'
    title: CreateDeliveryTrackerRequest
  CreateRefundRequest:
    type: object
    properties:
      chargeId:
        type: string
      refundAmount:
        $ref: '#/definitions/Amount'
      softDescriptor:
        type: string
    title: CreateRefundRequest
  DeliveryDetail:
    type: object
    properties:
      carrierCode:
        type: string
      trackingNumber:
        type: string
    title: DeliveryDetail
  DeliverySpecifications:
    type: object
    properties:
      addressRestrictions:
        $ref: '#/definitions/AddressRestrictions'
      specialRestrictions:
        type: array
        items:
          type: string
    title: DeliverySpecifications
  DeliveryTrackerResponse:
    type: object
    properties:
      amazonOrderReferenceId:
        type: string
      deliveryDetails:
        type: array
        items:
          $ref: '#/definitions/DeliveryDetail'
    title: DeliveryTrackerResponse
  Frequency:
    type: object
    properties:
      unit:
        type: string
      value:
        type: string
    title: Frequency
  Limits:
    type: object
    properties:
      amountBalance:
        $ref: '#/definitions/Amount'
      amountLimit:
        $ref: '#/definitions/Amount'
    title: Limits
  MerchantMetadata:
    type: object
    properties:
      customInformation:
        type: string
      merchantReferenceId:
        type: string
      merchantStoreName:
        type: string
      noteToBuyer:
        type: string
    title: MerchantMetadata
  PaymentDetails:
    type: object
    properties:
      allowOvercharge:
        type: string
      canHandlePendingAuthorization:
        type: boolean
      chargeAmount:
        $ref: '#/definitions/Amount'
      extendExpiration:
        type: boolean
      paymentIntent:
        type: string
      presentmentCurrency:
        type: string
      softDescriptor:
        type: string
      totalOrderAmount:
        $ref: '#/definitions/Amount'
    title: PaymentDetails
  PaymentPreference:
    type: object
    properties:
      paymentDescriptor:
        type: string
    title: PaymentPreference
  ProviderMetadata:
    type: object
    properties:
      providerReferenceId:
        type: string
    title: ProviderMetadata
  RecurringMetadata:
    type: object
    properties:
      amount:
        $ref: '#/definitions/Amount'
      frequency:
        $ref: '#/definitions/Frequency'
    title: RecurringMetadata
  RefundResponse:
    type: object
    properties:
      chargeId:
        type: string
      refundAmount:
        $ref: '#/definitions/Amount'
      refundId:
        type: string
      releaseEnvironment:
        type: string
      softDescriptor:
        type: string
      statusDetails:
        $ref: '#/definitions/StatusDetails'
    title: RefundResponse
  Restriction:
    type: object
    properties:
      statesOrRegions:
        type: array
        items:
          type: string
      zipCodes:
        type: array
        items:
          type: string
    title: Restriction
  StatusDetails:
    type: object
    properties:
      lastUpdatedTimestamp:
        type: string
      reasonCode:
        type: string
      reasonDescription:
        type: string
      state:
        type: string
    title: StatusDetails
  UpdateChargePermissionRequest:
    type: object
    properties:
      merchantMetadata:
        $ref: '#/definitions/MerchantMetadata'
      recurringMetadata:
        $ref: '#/definitions/RecurringMetadata'
    title: UpdateChargePermissionRequest
  UpdateCheckoutSessionRequest:
    type: object
    properties:
      merchantMetadata:
        $ref: '#/definitions/MerchantMetadata'
      paymentDetails:
        $ref: '#/definitions/PaymentDetails'
      webCheckoutDetails:
        $ref: '#/definitions/WebCheckoutDetails'
    title: UpdateCheckoutSessionRequest
  WebCheckoutDetails:
    type: object
    properties:
      amazonPayRedirectUrl:
        type: string
      checkoutCancelUrl:
        type: string
      checkoutResultReturnUrl:
        type: string
      checkoutReviewReturnUrl:
        type: string
    title: WebCheckoutDetails
